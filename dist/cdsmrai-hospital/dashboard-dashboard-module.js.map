{"version":3,"sources":["./src/app/dashboard/add-ward/add-ward.component.ts","./src/app/dashboard/add-ward/add-ward.component.html","./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.module.ts","./src/app/dashboard/opd-registration/opd-registration.component.ts","./src/app/dashboard/opd-registration/opd-registration.component.html","./src/app/dashboard/ward-list/ward-list.component.ts","./src/app/dashboard/ward-list/ward-list.component.html"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ServiceService } from 'src/app/core/service.service';\n@Component({\n  selector: 'app-add-ward',\n  templateUrl: './add-ward.component.html',\n  styleUrls: ['./add-ward.component.scss']\n})\nexport class AddWardComponent implements OnInit {\n  subscriptions = new Subscription();\n\n  constructor(private fb: FormBuilder, private router: Router , private service : ServiceService , private route : ActivatedRoute) {}\n\n  form: FormGroup;\n  submitted = false\n  id\n  ProductType\n  allData\n  selectProduct\n\n\n  async ngOnInit() {\n    this.form = this.fb.group({\n      'priceMatrix': this.fb.array([\n        this.addnewBlock()\n      ])\n    });\n  }\n\n\n  addnewBlock() {\n    return this.fb.group({\n      'wardname': ['', [Validators.required]],\n      'bed_from' : ['', [Validators.required]],\n      'bed_to': ['', [Validators.required]],\n      'price': ['', [Validators.required]],\n      'status': ['', [Validators.required]],\n    });\n  }\n\n  \n\n\n\n  addBlock() {\n    this.submitted = false\n    const control = <FormArray>this.form.controls['priceMatrix'];\n    control.push(this.addnewBlock());\n  }\n\n\n  \n\n\n  removeBlock(index) {\n    if (index == 0) {\n      return\n    }\n    const control = <FormArray>this.form.controls['priceMatrix'];\n    control.removeAt(index)\n  }\n\n  \n\n\n\n\n  formErrors = {\n    priceMatrix: this.priceMatrixErrors()\n  };\n\n\n  priceMatrixErrors() {\n    return [{\n      //  ---------------------forms errors on x level ------------------------\n      baseSumInsured: '',\n\n      // ---------------------------------------------------------------------\n      'pricing': this.pricingErrors()\n\n    }]\n\n  }\n\n  pricingErrors() {\n    return [{\n      //  ---------------------forms errors on y level ------------------------\n      ageRange1: '',\n      ageRange2:'',\n      premiumAmount: '',\n      // ----------------------------------------------------------------------\n    }]\n  }\n\n  ngOnDestroy() {\n    if(this.subscriptions){\n      this.subscriptions.unsubscribe();\n    }\n  }\n  next(){\n    \n  }\n}\n\n\n","<div class=\"setting_item\">\n    <h2>Add New Ward</h2>\n    <form [formGroup]=\"form\">\n        <div class=\"comapre_details comman_box mt-5 mb-5\" formArrayName=\"priceMatrix\"\n            *ngFor=\"let X of form['controls'].priceMatrix['controls']; let ix=index\">\n\n            <div class=\"\">\n                <div class=\"\" formGroupName=\"{{ix}}\">\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-6\">\n                            <div class=\"form-group\">\n                                <label class=\"form-group\"\n                                    [ngClass]=\"{'invalid-danger' : (submitted && X.controls.wardname.errors)}\">Ward Name\n                                </label>\n                                <input type=\"text\" formControlName='wardname' class=\"form-control\">\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <div class=\"form-group\">\n                                <label class=\"form-group\"\n                                    [ngClass]=\"{'invalid-danger' : (submitted && X.controls.price.errors)}\">Price</label>\n                                <input type=\"text\" formControlName='price' class=\"form-control\"\n                                    placeholder=\"price\" required >\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6 col-lg-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-group\"\n                                    [ngClass]=\"{'invalid-danger' : (submitted && X.controls.bed_from.errors)}\">Bed No.</label>\n                                    <input type=\"text\" formControlName='bed_from' class=\"form-control\"\n                                    placeholder=\"Bed No.\" required >\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6 col-lg-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-group\"\n                                    [ngClass]=\"{'invalid-danger' : (submitted && X.controls.bed_to.errors)}\">Bed no.</label>\n                                    <input type=\"text\" formControlName='bed_to' class=\"form-control\"\n                                    placeholder=\"Bed No.\" required >\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6 col-lg-4\">\n                            <div class=\"form-group\">\n                                <label class=\"form-group\"\n                                    [ngClass]=\"{'invalid-danger' : (submitted && X.controls.status.errors)}\">Status</label>\n                                    <input type=\"text\" formControlName='status' class=\"form-control\"\n                                    placeholder=\"Status\" required >\n                            </div>\n                        </div>\n                    </div>\n\n                    \n                </div>\n            </div>\n            <div *ngIf=\"ix>0\" class=\"relativepositionx\" (click)='removeBlock(ix)'><img\n                    src=\"../../../assets/images/cross.svg\" alt=\"\"></div>\n        </div>\n\n            <div class=\"row\">\n                <div class=\"col-sm-12 text-center\" (click)=\"addBlock()\" value=\"Add X\">\n                    <div><img src=\"../../../assets/images/plus.svg\" alt=\"\"></div>\n                    <div class=\"plustext\">Add New Sum Insured</div>\n                </div>\n            </div>\n\n        <div class=\"flenewClientBlockb mb-5\">\n            <div><button class=\"common_button \" type=\"submit\" (click)='next()'>Submit</button></div>\n\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { WardListComponent } from './ward-list/ward-list.component';\nimport { OpdRegistrationComponent } from './opd-registration/opd-registration.component';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'ward', component: WardListComponent },\n  { path: 'registration', component: OpdRegistrationComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { WardListComponent } from './ward-list/ward-list.component';\nimport { DemoMaterialModule } from '../material-module';\nimport { AddWardComponent } from './add-ward/add-ward.component';\nimport { OpdRegistrationComponent } from './opd-registration/opd-registration.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [DashboardComponent, WardListComponent, AddWardComponent, OpdRegistrationComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    DemoMaterialModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class DashboardModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ServiceService } from 'src/app/core/service.service';\n\n@Component({\n  selector: 'app-opd-registration',\n  templateUrl: './opd-registration.component.html',\n  styleUrls: ['./opd-registration.component.scss']\n})\nexport class OpdRegistrationComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private router: Router, private service: ServiceService,\n    private route: ActivatedRoute) { }\n    registration: FormGroup;\n  submitted = false\n  id\n  allData\n  async ngOnInit() {\n    this.registration = this.fb.group({\n      patientname: ['', Validators.required],\n      age: ['', [Validators.required, Validators.pattern('[0-9]{10}$')]],\n      mobilenumber: ['', Validators.required],\n      address:['', Validators.required],\n      email: ['', [Validators.required, Validators.email, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$')]],\n      referenceby: ['', Validators.required],\n      referencemobile: ['', Validators.required],\n      \n      gender: ['0', Validators.required],\n      department: ['0', Validators.required],\n      panel: ['0', Validators.required],\n      doctor: ['0', Validators.required],\n      adharno: ['', Validators.required],\n      calculate_amount: this.fb.array([\n        this.addnewBlock()\n      ])\n     \n      // ClientSPOCMobile: ['', [Validators.required, Validators.minLength(10), Validators.pattern('[0-9]{10}$')]],\n    });\n\n    \n\n\n  }\n\n  addnewBlock() {\n    return this.fb.group({\n      date: ['', [Validators.required]],\n      categorytype: ['', [Validators.required]],\n      qty: ['', [Validators.required]],\n      amount: ['', [Validators.required]],\n      discount_percentage: ['', [Validators.required]],\n      discount_amount: ['', [Validators.required]],\n      tax_percentage: ['', [Validators.required]],\n      tax_amount: ['', [Validators.required]],\n      netamount: ['', [Validators.required]],\n      remark: ['', [Validators.required]],\n    });\n  }\n\n\n  addBlock() {\n    this.submitted = false\n    const control = <FormArray>this.registration.controls['calculate_amount'];\n    control.push(this.addnewBlock());\n  }\n\n  removeBlock(index) {\n    if (index == 0) {\n      return\n    }\n    const control = <FormArray>this.registration.controls['calculate_amount'];\n    control.removeAt(index)\n  }  \n  get f() { return this.registration.controls; }\n\n\n  async next() {\n    this.submitted = true\n    if (this.registration.invalid || this.registration.value.DemoAccount == '0') {\n      return;\n    }\n    \n  }\n\n}\n","<div class=\"setting_item\">\n    <div class=\"comapre_details comman_box mt-5 mb-5\">\n        <form [formGroup]=\"registration\">\n            <div class=\"row\">\n                <div class=\"col-sm-6 col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.patientname.errors)}\">Name Of Patient</label>\n                        <input type=\"text\" formControlName='patientname' name=\"insta_id\" class=\"form-control\" placeholder=\"Name\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.address.errors)}\">Address</label>\n                        <input type=\"text\" style=\"text-transform: uppercase;\" formControlName='address' name=\"insta_id\" class=\"form-control\" placeholder=\"Address\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.referenceby.errors)}\">Reference by</label>\n                        <input type=\"text\" formControlName='referenceby' name=\"insta_id\" class=\"form-control\" placeholder=\"Reference by\" required>\n                    </div>\n \n                    \n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.gender.errors)}\">Gender</label>\n                        <label class=\"select\">\n                            <select formControlName='gender'>\n                                <option value=\"0\" selected disabled>Please Select</option>\n                                <option value=\"Male\">Yes</option>\n                                <option value=\"Female\">No</option>\n                            </select>\n                        </label>      \n                      </div>\n                </div>\n                <div class=\"col-sm-6 col-md-4\">\n                   \n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.age.errors)}\">Age</label>\n                        <input type=\"text\" style=\"text-transform: uppercase;\" formControlName='age' name=\"insta_id\" class=\"form-control\" placeholder=\"Age\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.email.errors)}\">Email ID</label>\n                        <input type=\"text\" style=\"text-transform: uppercase;\" formControlName='email' name=\"insta_id\" class=\"form-control\" placeholder=\"Email ID\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.referencemobile.errors)}\">Reference Mobile</label>\n                        <input type=\"text\" formControlName='referencemobile' name=\"insta_id\" class=\"form-control\" placeholder=\"Reference Mobile\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.department.errors)}\">Department</label>\n                        <label class=\"select\">\n                            <select formControlName='department'>\n                                <option value=\"0\" selected disabled>Please Select</option>\n                                <option value=\"Male\">Yes</option>\n                                <option value=\"Female\">No</option>\n                            </select>\n                        </label>      \n                      </div>\n                    \n                </div>\n                <div class=\"col-sm-6 col-md-4\">\n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.mobilenumber.errors)}\">Mobile Number</label>\n                        <input type=\"text\" formControlName='mobilenumber' name=\"insta_id\" class=\"form-control\" placeholder=\"Mobile number\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.adharno.errors)}\">Adhar Number</label>\n                        <input type=\"text\" style=\"text-transform: uppercase;\" formControlName='adharno' name=\"insta_id\" class=\"form-control\" placeholder=\"Adhar Number\" required>\n                    </div>\n                    \n                    <!-- <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.ward.errors)}\">Required Ward</label>\n                        <div class = \"dflex\" >\n                            <input type=\"checkbox\" formControlName='ward' name=\"insta_id\" class=\"form-control checkbox\" placeholder=\"Required ward\" required> <span>Required Ward</span>\n                        </div>\n                    </div> -->\n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.panel.value == '0')}\">Panel</label>\n                        <label class=\"select\">\n                            <select formControlName='panel'>\n                                <option value=\"0\" selected disabled>Please Select</option>\n                                <option value=\"Yes\">Yes</option>\n                                <option value=\"No\">No</option>\n                            </select>\n                        </label>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"form-group\" [ngClass]=\"{'invalid-danger' : (submitted && f.doctor.value == '0')}\">Doctor</label>\n                        <label class=\"select\">\n                            <select formControlName='doctor'>\n                                <option value=\"0\" selected disabled>Please Select</option>\n                                <option value=\"Yes\">Yes</option>\n                                <option value=\"No\">No</option>\n                            </select>\n                        </label>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"comapre_details comman_box mt-5 mb-5\"  style = \"position: relative;\" formArrayName=\"calculate_amount\"\n            *ngFor=\"let X of registration['controls'].calculate_amount['controls']; let ix=index\">\n\n            <div class=\"\" formGroupName=\"{{ix}}\" >\n\n                <div class=\"row\">\n                    <div class=\"col-sm-6 col-md-3\">\n                        <div class=\"form-group\">\n                            <label class=\"form-group\"\n                                [ngClass]=\"{'invalid-danger' : (submitted && X.controls.date.errors)}\">Date\n                            </label>\n                            <input type=\"text\" formControlName='date' class=\"form-control\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"form-group\"\n                                [ngClass]=\"{'invalid-danger' : (submitted && X.controls.discount_percentage.errors)}\">Discount Percentage\n                            </label>\n                            <input type=\"text\" formControlName='discount_percentage' class=\"form-control\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"form-group\"\n                                [ngClass]=\"{'invalid-danger' : (submitted && X.controls.netamount.errors)}\">Net Amount\n                            </label>\n                            <input type=\"text\" formControlName='netamount' class=\"form-control\">\n                        </div>\n                    </div>\n\n                    <div class=\"col-sm-6 col-md-3\">\n                        <div class=\"form-group\">\n                            <label class=\"form-group\"\n                                [ngClass]=\"{'invalid-danger' : (submitted && X.controls.categorytype.errors)}\">Category Type\n                            </label>\n                            <input type=\"text\" formControlName='categorytype' class=\"form-control\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"form-group\"\n                                [ngClass]=\"{'invalid-danger' : (submitted && X.controls.discount_amount.errors)}\">Discount Amount\n                            </label>\n                            <input type=\"text\" formControlName='discount_amount' class=\"form-control\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"form-group\"\n                                [ngClass]=\"{'invalid-danger' : (submitted && X.controls.remark.errors)}\">Remark\n                            </label>\n                            <input type=\"text\" formControlName='remark' class=\"form-control\">\n                        </div>\n                    </div>\n\n                    <div class=\"col-sm-6 col-md-3\">\n                        <div class=\"form-group\">\n                            <label class=\"form-group\"\n                                [ngClass]=\"{'invalid-danger' : (submitted && X.controls.qty.errors)}\">Quantity\n                            </label>\n                            <input type=\"text\" formControlName='qty' class=\"form-control\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"form-group\"\n                                [ngClass]=\"{'invalid-danger' : (submitted && X.controls.tax_percentage.errors)}\">Tax Percentage\n                            </label>\n                            <input type=\"text\" formControlName='tax_percentage' class=\"form-control\">\n                        </div>\n                    </div>\n\n                    <div class=\"col-sm-6 col-md-3\">\n                        <div class=\"form-group\">\n                            <label class=\"form-group\"\n                                [ngClass]=\"{'invalid-danger' : (submitted && X.controls.amount.errors)}\">Amount\n                            </label>\n                            <input type=\"text\" formControlName='amount' class=\"form-control\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"form-group\"\n                                [ngClass]=\"{'invalid-danger' : (submitted && X.controls.tax_amount.errors)}\">Tax Amount\n                            </label>\n                            <input type=\"text\" formControlName='tax_amount' class=\"form-control\">\n                        </div>\n                    </div>\n                    \n                </div>\n\n                \n            </div>\n            <div *ngIf=\"ix>0\" class=\"relativepositionx\" (click)='removeBlock(ix)'><img\n                src=\"../../../assets/images/cross.svg\" alt=\"\"></div>\n\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-sm-12 text-center\" (click)=\"addBlock()\" value=\"Add X\">\n                    <div><img src=\"../../../assets/images/plus.svg\" alt=\"\"></div>\n                    <div class=\"plustext\">Add New Sum Insured</div>\n                </div>\n            </div>\n\n\n          \n        </form>\n    </div>\n    \n    <div class=\"flexsb mb-5\" style=\"margin-right: 55px;\">\n        <div  (click)='next()'><button class=\"common_button \">Submit</button></div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { environment } from 'src/environments/environment';\nimport {Sort} from '@angular/material/sort'; //sort\nimport { ServiceService } from 'src/app/core/service.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport { AddWardComponent } from '../add-ward/add-ward.component';\n\nexport interface PeriodicElement {\n  wardid: string;\n  name: string;\n  from: string;\n  to: string;\n  price: string;\n  action: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {wardid: '1', name: 'Hydrogen', from: '1', to: 'H',price:'2000',action:'1'},\n  {wardid: '1', name: 'Hydrogen', from: '1', to: 'H',price:'2000',action:'1'},\n\n  {wardid: '1', name: 'Hydrogen', from: '1', to: 'H',price:'2000',action:'1'},\n\n];\n\n@Component({\n  selector: 'app-ward-list',\n  templateUrl: './ward-list.component.html',\n  styleUrls: ['./ward-list.component.scss']\n})\n\nexport class WardListComponent implements OnInit {\n  displayedColumns: string[] = ['wardid', 'name', 'from', 'to', 'price', 'action'];\n  dataSource = ELEMENT_DATA;\n  environment\n  roles;\n  sortedData: PeriodicElement[] //sort\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  constructor(\n    private router: Router, \n    private service: ServiceService,\n    private route: ActivatedRoute,\n    public dialog: MatDialog\n    ) { }\n  \n\n  ngOnInit(): void {\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    // this.dataSource.filter = filterValue.trim().toLowerCase();\n    // if (this.dataSource.paginator) {\n    //   this.dataSource.paginator.firstPage();\n    // }\n  }\n  sortData(event){\n\n  }\n  addnew(){\n    const dialogRef = this.dialog.open(AddWardComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n}\n","\n        <div class = \"setting_item container\">\n            <div class = \"flexsb headingsearch\">\n                <div class = \"headingtext\"><span>Group Health</span> | Group Accident</div>\n                <div class = \"inputButtin flexsb\">\n                    <div class = \"mr-4\" style = \"position: relative;\"><input type=\"text\" (keyup)=\"applyFilter($event.target.value)\"  placeholder = \"Search\">\n                    \n                    <img src=\"../../../assets/images/Vector.svg\" alt=\"\"></div>\n                    <div class = \"common_button\" (click)='addnew()'>Add New Ward</div>\n\n                </div>\n            </div>\n            <div class = \"comapre_details comman_box mb-5\">\n                \n              <div class=\"table-responsive\">\n                <table mat-table matSort (matSortChange)=\"sortData($event)\" [dataSource]=\"dataSource\"\n                  class=\"mat-elevation-z8 table table-hover\">\n\n                  <ng-container matColumnDef=\"wardid\">\n                    <th mat-sort-header=\"wardid\" mat-header-cell  *matHeaderCellDef>Ward ID </th>\n                    <td mat-cell *matCellDef=\"let element;let i = index\"> {{element?.wardid}}</td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"name\">\n                    <th mat-header-cell  *matHeaderCellDef>Client Name </th>\n                    <td mat-cell *matCellDef=\"let element\">{{element?.name}}\n                       \n                    </td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"from\">\n                    <th mat-sort-header=\"from\" mat-header-cell  *matHeaderCellDef>From</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                      <div>{{element?.from}}</div>\n                    </td>\n                  </ng-container>\n\n                  <ng-container matColumnDef=\"to\">\n                    <th mat-header-cell  *matHeaderCellDef>To</th>\n                    <td mat-cell *matCellDef=\"let element\">\n                      <div>{{element?.to}}</div>\n                    </td>\n                  </ng-container>\n                  <ng-container matColumnDef=\"price\">\n                    <th mat-header-cell  *matHeaderCellDef>price </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                      {{element?.price}}\n                    </td>\n                  </ng-container>\n                 \n\n                  <ng-container matColumnDef=\"action\">\n                    <th mat-header-cell *matHeaderCellDef class=\"wpx-100\"> Action </th>\n                    <td mat-cell *matCellDef=\"let element\">\n                      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\" class = \"tablebutton\">\n                      <!-- <mat-icon>more_vert</mat-icon> -->\n                      <i class=\"fa fa-ellipsis-v\" aria-hidden=\"true\"></i>\n      \n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                      \n                      <button mat-menu-item  >\n                        <!-- <mat-icon>dialpad</mat-icon> -->\n                        <span >Edit Details</span>\n                      </button>\n\n                    </mat-menu>\n                    </td>\n                  </ng-container>\n\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n              </div>\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n\n                \n                </div>\n        </div>\n\n"],"sourceRoot":"webpack:///"}