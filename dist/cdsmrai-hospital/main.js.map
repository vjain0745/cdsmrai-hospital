{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/authentication/index.ts","./src/app/core/authentication/login/login.component.ts","./src/app/core/authentication/login/login.component.html","./src/app/core/core-routing.module.ts","./src/app/core/core.module.ts","./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/app/core/left-sidebar/left-sidebar.component.ts","./src/app/core/left-sidebar/left-sidebar.component.html","./src/app/core/service.service.ts","./src/app/material-module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport * as authenticationcomponent from './core/authentication'\n// import { GaurdsGuard } from './core/gaurds/gaurds.guard';\n\nconst routes: Routes = [\n  { path: '', loadChildren: () => import('./core/core.module').then(m => m.CoreModule) },\n  { path: 'dashboard', loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule) },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: PreloadAllModules\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\n\nimport { Component, HostListener } from '@angular/core';\n// import { ProgressBarMode } from '@angular/material/progress-bar';\nimport { NavigationStart, Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { ServiceService } from './core/service.service';\n@HostListener('window:resize', ['$event'])\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  title = 'cdsmrai-hospital';\n  screenwidth\n  showHead = false\n  showSideBar = false\n  pagenotfoundd: Boolean = false\n  // mode: ProgressBarMode = 'indeterminate';\n  value: any= 0;\n  constructor(private router: Router,private service:ServiceService) {\n    this.screenwidth = window.innerWidth\n    if (this.screenwidth < 768) {\n      this.showSideBar = false\n    } \n    else {\n      this.showSideBar = true\n    }\n    router.events.forEach((event) => {\n      if (event instanceof NavigationStart) {\n        this.pageNotFound()\n        if (event['url'] == '/login' || event['url'] == '/otp' || event['url'].includes('/reset-password')\n        || event['url'] == '/forgot-password' || event['url'] == '/' ||  event['url'] == '/pagenotfound' || event['url'] == '/shared/success') {\n          this.showHead = false;\n        } else {\n          console.log(event['url']);\n          \n          this.showHead = true;\n          window.scroll(0, 0)\n          this.service.headerString.next(event['url'])\n        }\n      }\n    });\n\n    // this.service.spinnerProgressBar.subscribe((val)=>{\n    //   console.log(val);\n    //   if(val > 0){\n    //     this.mode = 'determinate'\n    //     this.value = val\n    //   }\n    // })\n  }\n\n  onResize(event) {\n    this.screenwidth = event.target.innerWidth\n    if (this.screenwidth < 768) {\n      this.showSideBar = false\n    }\n    else {\n      this.showSideBar = true\n    }\n\n  }\n\n  pageNotFound(){\n  //   this.service.pageNotfound\n  //   .subscribe((val)=>{\n  //     if(val){\n  //       setTimeout(() => {        \n  //         this.pagenotfoundd = true\n  //       }, 10);\n  //     }\n  //     else{\n  //       setTimeout(() => {        \n  //         this.pagenotfoundd = false\n  //       }, 10);\n        \n  //     }\n  //   })\n  }\n\n\n}\n","<div class = \"containerdiv\" (window:resize)=\"onResize($event)\">\n  <div class = \"leftsidebar\" *ngIf=\"showHead && showSideBar && !pagenotfoundd\">\n      <app-left-sidebar></app-left-sidebar>\n  </div>\n  <div class = \"rightside-layout\" >\n      <div class = \"right_containerDiv\" >\n          <div class = \"header\" *ngIf=\"showHead && !pagenotfoundd\"><app-header></app-header></div>\n          <router-outlet></router-outlet>\n          <!-- <ngx-spinner bdColor = \"rgba(0, 0, 0, 0.9)\" size = \"large\" color = \"#fff\" type = \"square-loader\" [fullScreen] = \"true\"\n           template = '<img src = \"/assets/images/logo.svg\">'>\n           <p style=\"color: white; position: relative; top: 5rem;\" > Hey! You have protected your valuable assets </p>\n           <mat-progress-bar mode=\"{{mode}}\" value=\"{{value}}\"></mat-progress-bar>\n          </ngx-spinner> -->\n      </div>\n\n  </div>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from './core/core.module';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {DemoMaterialModule} from './material-module'\n// import { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    DemoMaterialModule,\n    // ToastrModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgxSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { LoginComponent } from './login/login.component';\r\n\r\n\r\n\r\n\r\nexport const components: any[] = [ LoginComponent ];\r\n\r\nexport * from './login/login.component';\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    submitted = false\n    forgotSubmited = false\n    screenwidth\n    mobileError = false\n    emailError = false\n    newUser;\n    all_groups:Array<any> = [];\n    emplo;\n    constructor(\n      private fb: FormBuilder,\n      private router: Router,\n    ) { \n    }\n  \n    ngOnInit() {\n      this.loginForm = this.fb.group({\n        email: ['', Validators.required],\n        password: ['', Validators.required],\n      });\n    }\n  \n    get f() { return this.loginForm.controls; }\n  \n    async submit() {\n      this.submitted = true\n      this.forgotSubmited = false\n      console.log(this.loginForm)\n\n      if (this.loginForm.invalid) {\n        return;\n      }\n      const emailvalidation = /[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$/;\n      if (!(emailvalidation.test(this.loginForm.value.email))) {\n        this.mobileError = false\n        this.emailError = true\n        return\n      }\n      // this.service.spinnerStart()\n\n    }\n    forgotPass(){}\n  \n \n\n      // toaster(type, msg, time = 1500) {\n  //   switch (type) {\n  //     case \"success\":\n  //       this.toastr.success(msg, \"SUCCESS\", { timeOut: time });\n  //       break;\n  //     case \"info\":\n  //       this.toastr.info(msg, \"INFORMATION\", { timeOut: time });\n  //       break;\n  //     case \"error\":\n  //       this.toastr.error(msg, \"ERROR\", { timeOut: time });\n  //       break;\n  //     case \"warn\":\n  //       this.toastr.warning(msg, \"WARNING\", { timeOut: time });\n  //       break;\n  //     case \"update\":\n  //       this.toastr.success(\"msg\", \"UPDATE\", { timeOut: time });\n  //     default:\n  //       this.toastr.success(msg, \"SUCCESS\", { timeOut: time });\n  //       break;\n  //   }\n  // }\n  }\n","<div class=\"containerDiv flexsb\">\n    <div class=\"leftgrey\"></div>\n    <div class=\"desk_leftscreen\" style=\"background-image: url(/assets/images/signin_image.png);\">\n        <div class=\"logo\">\n            <img class=\"dekstopview\" src=\"/assets/logo.jpeg\" alt=\"\">\n\n            <img class=\"ipadview\" src=\"/assets/mobile/mobil-logo.png\" alt=\"\">\n        </div>\n        <!-- <div class=\"leftman_icon\" style=\"background-image: url(/assets/images/signin_image.png);\">\n            <img class=\"dekstopview deskimage\" src=\"/assets/images/signin_image.png\" alt=\"\">\n            <div class = \"ipadview welcome\">Welcome back</div>\n            <div><img class=\"ipadview\" src=\"./assets/mobile/mobile_man.svg\" alt=\"\"></div>\n        </div> -->\n    </div>\n    <div class=\"desk_rightscreen\">\n        <div class=\"loginbox\">\n            <div class=\"comman_heading ipadview\" >Login</div>\n            <div class=\"comman_heading dekstopview\">Login to your account</div>\n            <div class=\"comman_headingtext\">with the credentials provided by team CDSMH.</div>\n            <form [formGroup]=\"loginForm\" >\n                <div class=\"floating-label-group\">\n                    <input type=\"text\" id=\"username\" autocomplete=\"off\" \n                    required formControlName='email' />\n                    <label class=\"floating-label\"  [ngClass]=\"{'invalid-danger' : (submitted || forgotSubmited) && f.email.errors}\">Email ID/ Mobile no.</label>\n                    <div *ngIf=\"(submitted || forgotSubmited) && f.email.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"(submitted || forgotSubmited) && f.email.errors.required\" class=\"invalid\">Email ID/ Mobile no. is required.</div>\n                    </div> \n                    <div *ngIf=\"emailError\" class=\"invalid\">Email ID is not valid.</div>\n                    <div *ngIf=\"mobileError\" class=\"invalid\">Mobile no. is not valid.</div>\n                    <!-- <div *ngIf=\"forgotSubmited && f.email.errors.pattern\" class=\"invalid\">Email ID/ Mobile no. is not valid.</div> -->\n\n                </div>\n                <!-- [ngClass]=\"{'my_class': step === 'step1'}\" -->\n                <div class=\"floating-label-group\">\n                    <input type=\"password\" id=\"password\" autocomplete=\"off\" required formControlName='password' />\n                    <label class=\"floating-label\" [ngClass]=\"{'invalid-danger' : submitted && f.password.errors}\">Password</label>\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"submitted && f.password.errors.required\" class=\"invalid\">Password is required.</div>\n                    </div>\n                </div>\n            </form>\n            <div class = \"forgott buttontext\" (click)='forgotPass()'>Forgot password?</div>\n            <!-- <div class = \"forgotdesktop buttontext\">Forgot password?</div> -->\n\n            <div class=\"buttondiv\" id=\"loginButtons\">\n                <!-- <div type='submit' class=\"common_button\" (click)=\"submit()\">Login Now</div> -->\n                <button type='submit' class=\"common_button\" (click)=\"submit()\">Login Now</button>\n\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport * as authenticationcomponent from './authentication'\nimport { HeaderComponent } from './header/header.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: \"login\" , component : authenticationcomponent.LoginComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoreRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CoreRoutingModule } from './core-routing.module';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './authentication/login/login.component';\n\nimport * as authenticationComponents from './authentication';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LeftSidebarComponent } from './left-sidebar/left-sidebar.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n\n@NgModule({\n  declarations: [HeaderComponent , ...authenticationComponents.components,LeftSidebarComponent],\n  imports: [\n    CommonModule,\n    CoreRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxSpinnerModule\n  ],\n\nexports: [\n  HeaderComponent,\n  LeftSidebarComponent,\n]\n})\n\nexport class CoreModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ServiceService } from '../service.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  headerValue: string;\n\n  constructor(private service:ServiceService) { }\n\n  ngOnInit(): void {\n    this.service.headerString.subscribe(val =>{\n      // console.log(val);\n      if (val=='/dashboard') {\n        this.headerValue = 'Dashboard'\n      }\n      if (val=='/dashboard/ward') {\n        this.headerValue = 'Ward'\n      }\n      if (val=='/dashboard/registration') {\n        this.headerValue = 'Registration'\n      }\n      \n    },\n    err =>{\n      console.log(err);\n      \n    })\n  }\n\n}\n","<div class = \"conatinerDiv\">\n    <div class = \"namediv\">\n        <!-- <div class = \"name\">Hi Anuj,</div> -->\n        <div class = \"buttondiv_search\">\n        </div>\n    </div>\n    <div class = \"header_heading\">{{headerValue}}</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ServiceService } from '../service.service';\n\n@Component({\n  selector: 'app-left-sidebar',\n  templateUrl: './left-sidebar.component.html',\n  styleUrls: ['./left-sidebar.component.scss']\n})\nexport class LeftSidebarComponent implements OnInit {\n  headerValue\n  constructor(private router: Router,private service:ServiceService) { }\n\n  ngOnInit(): void {\n    this.service.headerString.subscribe(val => {\n      console.log(val)\n      if (val=='/dashboard') {\n        this.headerValue = 'Dashboard'\n      }\n      if (val=='/dashboard/ward') {\n        this.headerValue = 'Ward'\n      }\n      if (val=='/dashboard/registration') {\n        this.headerValue = 'Registration'\n      }\n    })\n  }\n  openModal(){}\n}\n","<div class = \"leftsidemenuDiv\">\n    <div class = \"logodiv\">\n        <img src=\"../../../assets/logo.jpeg\" alt=\"\">\n    </div>\n    <div class = \"menudiv\">\n        <ul class = \"menu\">\n            <li [ngClass]=\"{'active' : headerValue == 'Dashboard'}\">\n                <a href=\"javascript:void(#)\">\n                    <span class = \"spanimgclass\"><img src=\"../../../assets/leftsidemenu/Activity.svg\" alt=\"\"></span>\n                    <span>Dashboard</span>\n                </a>\n            </li>\n            <li [ngClass]=\"{'active' : headerValue == 'Ward'}\">\n                <a routerLink='/dashboard/ward'>\n                    <span class = \"spanimgclass\"><img src=\"../../../assets/leftsidemenu/Group 540.svg\" alt=\"\"></span>\n                    <span>Ward</span>\n                </a>\n            </li>\n            <li [ngClass]=\"{'active' : headerValue == 'Registration'}\">\n                <a routerLink='/dashboard/registration'>\n                    <span class = \"spanimgclass\"><img src=\"../../../assets/leftsidemenu/Chart.svg\" alt=\"\"></span>\n                    <span>Registration</span>\n                </a>\n            </li>\n            <li [ngClass]=\"{'active' : headerValue == 'Insurer'}\">\n                <a routerLink='/master/insurer'>\n                    <!-- <span class = \"spanimgclass\"><img src=\"../../../assets/leftsidemenu/Discovery.svg\" alt=\"\"></span> -->\n                    <span>Insurers</span>\n                </a>\n            </li>\n            <li [ngClass]=\"{'active' : headerValue == 'Products'}\">\n                <a routerLink='/master/product'>\n                    <!-- <span class = \"spanimgclass\"><img src=\"../../../assets/leftsidemenu/Wallet.svg\" alt=\"\"></span> -->\n                    <span>Products</span>\n                </a>\n            </li>\n            <li [ngClass]=\"{'active' : headerValue == 'Claims'}\">\n                <a routerLink = \"/manage-clients/claims-manager\">\n                    <!-- <span class = \"spanimgclass\"><img src=\"../../../assets/leftsidemenu/Setting.svg\" alt=\"\"></span> -->\n                    <span>Claims Manager</span>\n                </a>\n            </li>\n            <li>\n                <a href=\"javascript:void(#)\">\n                    <!-- <span class = \"spanimgclass\"><img src=\"../../../assets/leftsidemenu/Setting.svg\" alt=\"\"></span> -->\n                    <span>Settings and Profile</span>\n                </a>\n            </li>\n            <li [ngClass]=\"{'active' : headerValue == 'faqs'}\">\n                <a routerLink = \"/master/faqs\">\n                    <!-- <span class = \"spanimgclass\"><img src=\"../../../assets/leftsidemenu/Setting.svg\" alt=\"\"></span> -->\n                    <span>FAQ'S</span>\n                </a>\n            </li>\n            <!-- <li [ngClass]=\"{'active' : headerValue == 'accountManagers'}\">\n                <a routerLink = \"/master/account-managers\">\n                    <span class = \"spanimgclass\"><img src=\"../../../assets/leftsidemenu/Setting.svg\" alt=\"\"></span>\n                    <span>Account Managers</span>\n                </a>\n            </li> -->\n            <li [ngClass]=\"{'active' : headerValue == 'accessControl'}\">\n                <a routerLink = \"/master/access-control\">\n                    <!-- <span class = \"spanimgclass\"><img src=\"../../../assets/leftsidemenu/Setting.svg\" alt=\"\"></span> -->\n                    <span>Access Control</span>\n                </a>\n            </li>\n            <!-- <li [ngClass]=\"{'active' : headerValue == 'transaction'}\">\n                <a routerLink = \"/master/transaction\">\n                    <span>Transaction</span>\n                </a>\n            </li> -->\n        </ul>\n    </div>\n    <div class = \"blankborder\"></div>\n\n    <div class = \"logoutDiv\">\n        <div class = \"logoutimg\"><img src=\"../../../assets/leftsidemenu/avatar 1.svg\" alt=\"\"></div>\n        <div class = \"logout\" (click)=\"openModal()\">Logout</div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { HttpClient } from '@angular/common/http';\n// import { ToastrService } from \"ngx-toastr\";\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class ServiceService {\n  constructor( private router: Router,\n    private spinner: NgxSpinnerService, \n    // private toastr: ToastrService,\n    private http: HttpClient) { }\n\n  userDetails = new BehaviorSubject<Object>(undefined);\n  checkEmailForForgotPage = new BehaviorSubject<String>('No Email');  //  No Email is the initial value.\n  headerString = new BehaviorSubject<String>('');  //  '' is the initial value.\n  pageNotfound = new BehaviorSubject<Boolean>(false);  //  '' is the initial value.\n  spinnerProgressBar = new BehaviorSubject<Number>(0)\n  policyBenefits = ''\n  priceMatrix = ''\n  accountSettings = ''\n  productDetails = ''\n  allgroupname = new BehaviorSubject<any[]>([]); //  '' is the initial value.\n\n  spinnerStart() {\n    this.spinner.show();\n  }\n  spinnerClose() {\n    this.spinner.hide();\n  }\n\n  login(data){\n    return this.http.post(environment.url + \"/loginAdmin\",data)\n  }\n\n\n  \n}\n\n","import {NgModule} from '@angular/core';\r\n// import {A11yModule} from '@angular/cdk/a11y';\r\n// import {ClipboardModule} from '@angular/cdk/clipboard';\r\n// import {DragDropModule} from '@angular/cdk/drag-drop';\r\n// import {PortalModule} from '@angular/cdk/portal';\r\n// import {ScrollingModule} from '@angular/cdk/scrolling';\r\n// import {CdkStepperModule} from '@angular/cdk/stepper';\r\n// import {CdkTableModule} from '@angular/cdk/table';\r\n// import {CdkTreeModule} from '@angular/cdk/tree';\r\n// import {MatAutocompleteModule} from '@angular/material/autocomplete';\r\n// import {MatBadgeModule} from '@angular/material/badge';\r\n// import {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\n// import {MatButtonModule} from '@angular/material/button';\r\n// import {MatButtonToggleModule} from '@angular/material/button-toggle';\r\n// import {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\n// import {MatChipsModule} from '@angular/material/chips';\r\n// import {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\n// import {MatDialogModule} from '@angular/material/dialog';\r\n// import {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\n// import {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    // A11yModule,\r\n    // ClipboardModule,\r\n    // CdkStepperModule,\r\n    // CdkTableModule,\r\n    // CdkTreeModule,\r\n    // DragDropModule,\r\n    // MatAutocompleteModule,\r\n    // MatBadgeModule,\r\n    // MatBottomSheetModule,\r\n    // MatButtonModule,\r\n    // MatButtonToggleModule,\r\n    // MatCardModule,\r\n    MatCheckboxModule,\r\n    // MatChipsModule,\r\n    // MatStepperModule,\r\n    MatDatepickerModule,\r\n    // MatDialogModule,\r\n    // MatDividerModule,\r\n    MatExpansionModule,\r\n    // MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    MatDialogModule,\r\n    // PortalModule,\r\n    // ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2021 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url:\"http://localhost:3000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}